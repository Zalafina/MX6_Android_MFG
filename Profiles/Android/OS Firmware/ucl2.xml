<!--
* Copyright (C) 2012, Freescale Semiconductor, Inc. All Rights Reserved.
* The CFG element contains a list of recognized usb devices.
*  DEV elements provide a name, class, vid and pid for each device.
*
* Each LIST element contains a list of update instructions.
*  "Install" - Erase media and install firmware.
*  "Update" - Update firmware only.
*
* Each CMD element contains one update instruction of attribute type.
*  "pull" - Does UtpRead(body, file) transaction.
*  "push" - Does UtpWrite(body, file) transaction.
*  "drop" - Does UtpCommand(body) then waits for device to disconnect.
*  "boot" - Finds configured device, forces it to "body" device and downloads "file".
*  "find" - Waits for "timeout" seconds for the "body" device to connect.
*  "show" - Parse and show device info in "file".  
-->


<UCL>
  <CFG>
    <STATE name="BootStrap" dev="MX6SL" vid="15A2" pid="0063"/>
    <STATE name="BootStrap" dev="MX6D" vid="15A2" pid="0061"/>
    <STATE name="BootStrap" dev="MX6Q" vid="15A2" pid="0054"/>

    <STATE name="Updater"   dev="MSC" vid="066F" pid="37FF"/>
  </CFG>

  <LIST name="BEV-TCU" desc="Update All in eMMC">
	
	<CMD state="BootStrap" type="boot" body="BootStrap" file ="firmware/u-boot-mfg.bin" >Loading U-boot</CMD>
	<CMD state="BootStrap" type="load" file="firmware/uImage-mfg" address="0x10800000"
        loadSection="OTH" setSection="OTH" HasFlashHeader="FALSE" >Loading Kernel.</CMD>
    <CMD state="BootStrap" type="load" file="firmware/initramfs.cpio.gz.uboot" address="0x10C00000"
        loadSection="OTH" setSection="OTH" HasFlashHeader="FALSE" >Loading Initramfs.</CMD>
    <CMD state="BootStrap" type="jump" > Jumping to OS image. </CMD>

    <!-- set /iMX_STBYEN to High -->
	<CMD state="Updater" type="push" body="$ echo 168 > /sys/class/gpio/export">export GPIO</CMD>
	<CMD state="Updater" type="push" body="$ echo out > /sys/class/gpio/gpio168/direction">set GPIO direction</CMD>
	<CMD state="Updater" type="push" body="$ echo 1 > /sys/class/gpio/gpio168/value">set GPIO value</CMD>

	<CMD state="Updater" type="push" body="$ dd if=/dev/zero of=/dev/mmcblk0 bs=512 seek=1536 count=16">clean up u-boot parameter</CMD>

	<CMD state="Updater" type="push" body="$ echo 0 > /sys/block/mmcblk0boot0/force_ro">access boot partition 1</CMD>
	<CMD state="Updater" type="push" body="send" file="files/u-boot.bin">Sending U-Boot</CMD>
	<CMD state="Updater" type="push" body="$ dd if=$FILE of=/dev/mmcblk0boot0 bs=512 seek=2 skip=2">write U-Boot to sd card</CMD>
	<CMD state="Updater" type="push" body="$ echo 1 > /sys/block/mmcblk0boot0/force_ro"> re-enable read-only access</CMD>

	<CMD state="Updater" type="push" body="send" file="mksdcard-android.sh.tar">Sending partition shell</CMD>
	<CMD state="Updater" type="push" body="$ tar xf $FILE "> Partitioning...</CMD>
	<CMD state="Updater" type="push" body="$ sh mksdcard-android.sh /dev/mmcblk0"> Partitioning...</CMD>

	<CMD state="Updater" type="push" body="$ ls -l /dev/mmc* ">Formatting sd partition</CMD>

	<CMD state="Updater" type="push" body="send" file="files/boot.img">Sending kernel uImage</CMD>
	<CMD state="Updater" type="push" body="$ dd if=$FILE of=/dev/mmcblk0p1">write boot.img</CMD>

    <!-- Do not format data partition for keep NAVI Mapdata -->
	<CMD state="Updater" type="push" body="$ mkfs.ext4 -b 4096 -m 0 /dev/mmcblk0p4">Formatting data partition</CMD>
    
	
	<!--
	<CMD state="Updater" type="push" body="send" file="mk-encryptable-data-android.sh.tar">Sending data partition shell</CMD>
	<CMD state="Updater" type="push" body="$ tar xf $FILE ">Extracting data partition shell</CMD>
	<CMD state="Updater" type="push" body="$ sh mk-encryptable-data-android.sh /dev/mmcblk0 /dev/mmcblk0p4">Making data encryptable</CMD>
	-->
	


	<CMD state="Updater" type="push" body="$ mkfs.ext4 /dev/mmcblk0p5">Formatting system partition</CMD>
	<CMD state="Updater" type="push" body="$ mkfs.ext4 /dev/mmcblk0p6">Formatting cache partition</CMD>
	<CMD state="Updater" type="push" body="$ mkfs.ext4 /dev/mmcblk0p7">Formatting device partition</CMD>
	<CMD state="Updater" type="push" body="pipe dd of=/dev/mmcblk0p5 bs=512k" file="files/system.img">Sending and writting system.img</CMD>
	<CMD state="Updater" type="push" body="frf">flush the memory.</CMD>

	<!--
	<CMD state="Updater" type="push" onError="ignore" body="pipe dd of=/dev/mmcblk0p7" file="file/userdate.img"> Sending userdata.img(optional) </CMD>
	<CMD state="Updater" type="push" body="frf">flush the memory.</CMD>  
	-->

	<CMD state="Updater" type="push" body="pipe dd of=/dev/mmcblk0p2 bs=512" file="files/recovery.img">Sending and writting recovery.img</CMD>

	<CMD state="Updater" type="push" body="$ echo 8 > /sys/devices/platform/sdhci-esdhc-imx.1/mmc_host/mmc0/mmc0:0001/boot_config">enable boot partion 1 to boot</CMD>
	<CMD state="Updater" type="push" body="frf">Finishing rootfs write</CMD>
	<CMD state="Updater" type="push" body="$ echo Update Complete!">Done</CMD>
	
  </LIST>
  
  <LIST name="TCU-UBoot" desc="Update U-Boot bootloader">
    <CMD state="BootStrap" type="boot" body="BootStrap" file ="firmware/u-boot-mfg.bin" >Loading U-boot</CMD>
	<CMD state="BootStrap" type="load" file="firmware/uImage-mfg" address="0x10800000"
        loadSection="OTH" setSection="OTH" HasFlashHeader="FALSE" >Loading Kernel.</CMD>
    <CMD state="BootStrap" type="load" file="firmware/initramfs.cpio.gz.uboot" address="0x10C00000"
        loadSection="OTH" setSection="OTH" HasFlashHeader="FALSE" >Loading Initramfs.</CMD>
    <CMD state="BootStrap" type="jump" > Jumping to OS image. </CMD>
    
    <!-- set /iMX_STBYEN to High -->
	<CMD state="Updater" type="push" body="$ echo 168 > /sys/class/gpio/export">export GPIO</CMD>
	<CMD state="Updater" type="push" body="$ echo out > /sys/class/gpio/gpio168/direction">set GPIO direction</CMD>
	<CMD state="Updater" type="push" body="$ echo 1 > /sys/class/gpio/gpio168/value">set GPIO value</CMD>
    
	<CMD state="Updater" type="push" body="$ dd if=/dev/zero of=/dev/mmcblk0 bs=512 seek=1536 count=16">clean up u-boot parameter</CMD>
	
	<CMD state="Updater" type="push" body="$ echo 0 > /sys/block/mmcblk0boot0/force_ro">access boot partition 1</CMD>
	<CMD state="Updater" type="push" body="send" file="files/u-boot.bin">Sending U-Boot</CMD>
	<CMD state="Updater" type="push" body="$ dd if=$FILE of=/dev/mmcblk0boot0 bs=512 seek=2 skip=2">write U-Boot to sd card</CMD>
	
	
	<CMD state="Updater" type="push" body="$ echo 1 > /sys/block/mmcblk0boot0/force_ro"> re-enable read-only access</CMD>
	<CMD state="Updater" type="push" body="frf">flush the memory.</CMD>
		
	<CMD state="Updater" type="push" body="send" file="mksdcard-android.sh.tar">Sending partition shell</CMD>
	<CMD state="Updater" type="push" body="$ tar xf $FILE "> Partitioning...</CMD>
	<CMD state="Updater" type="push" body="$ sh mksdcard-android.sh /dev/mmcblk0"> Partitioning...</CMD>

	<CMD state="Updater" type="push" body="$ ls -l /dev/mmc* ">Formatting sd partition</CMD>

	<CMD state="Updater" type="push" body="$ echo 8 > /sys/devices/platform/sdhci-esdhc-imx.1/mmc_host/mmc0/mmc0:0001/boot_config">enable boot partion 1 to boot</CMD>
	<CMD state="Updater" type="push" body="frf">Finishing rootfs write</CMD>
	<CMD state="Updater" type="push" body="$ echo Update Complete!">Done</CMD>
  </LIST>
  
  <LIST name="TCU-UBoot&Kernel" desc="Update U-Boot & Kernel">
    <CMD state="BootStrap" type="boot" body="BootStrap" file ="firmware/u-boot-mfg.bin" >Loading U-boot</CMD>
	<CMD state="BootStrap" type="load" file="firmware/uImage-mfg" address="0x10800000"
        loadSection="OTH" setSection="OTH" HasFlashHeader="FALSE" >Loading Kernel.</CMD>
    <CMD state="BootStrap" type="load" file="firmware/initramfs.cpio.gz.uboot" address="0x10C00000"
        loadSection="OTH" setSection="OTH" HasFlashHeader="FALSE" >Loading Initramfs.</CMD>
    <CMD state="BootStrap" type="jump" > Jumping to OS image. </CMD>
    
    <!-- set /iMX_STBYEN to High -->
	<CMD state="Updater" type="push" body="$ echo 168 > /sys/class/gpio/export">export GPIO</CMD>
	<CMD state="Updater" type="push" body="$ echo out > /sys/class/gpio/gpio168/direction">set GPIO direction</CMD>
	<CMD state="Updater" type="push" body="$ echo 1 > /sys/class/gpio/gpio168/value">set GPIO value</CMD>
    
	<CMD state="Updater" type="push" body="$ dd if=/dev/zero of=/dev/mmcblk0 bs=512 seek=1536 count=16">clean up u-boot parameter</CMD>
	
	<CMD state="Updater" type="push" body="$ echo 0 > /sys/block/mmcblk0boot0/force_ro">access boot partition 1</CMD>
	<CMD state="Updater" type="push" body="send" file="files/u-boot.bin">Sending U-Boot</CMD>
	<CMD state="Updater" type="push" body="$ dd if=$FILE of=/dev/mmcblk0boot0 bs=512 seek=2 skip=2">write U-Boot to sd card</CMD>
	
	
	<CMD state="Updater" type="push" body="$ echo 1 > /sys/block/mmcblk0boot0/force_ro"> re-enable read-only access</CMD>
	<CMD state="Updater" type="push" body="frf">flush the memory.</CMD>
		
	<CMD state="Updater" type="push" body="send" file="mksdcard-android.sh.tar">Sending partition shell</CMD>
	<CMD state="Updater" type="push" body="$ tar xf $FILE "> Partitioning...</CMD>
	<CMD state="Updater" type="push" body="$ sh mksdcard-android.sh /dev/mmcblk0"> Partitioning...</CMD>

	<CMD state="Updater" type="push" body="$ ls -l /dev/mmc* ">Formatting sd partition</CMD>
	<CMD state="Updater" type="push" body="frf">flush the memory.</CMD>

	<CMD state="Updater" type="push" body="send" file="files/boot.img">Sending kernel uImage</CMD>
	<CMD state="Updater" type="push" body="$ dd if=$FILE of=/dev/mmcblk0p1">write boot.img</CMD>
	<CMD state="Updater" type="push" body="frf">flush the memory.</CMD>

	<CMD state="Updater" type="push" body="$ echo 8 > /sys/devices/platform/sdhci-esdhc-imx.1/mmc_host/mmc0/mmc0:0001/boot_config">enable boot partion 1 to boot</CMD>
	<CMD state="Updater" type="push" body="frf">Finishing rootfs write</CMD>
	<CMD state="Updater" type="push" body="$ echo Update Complete!">Done</CMD>
  </LIST>
  
  <LIST name="TCU-Kernel" desc="Only Update Kernel">
	
	<CMD state="BootStrap" type="boot" body="BootStrap" file ="firmware/u-boot-mfg.bin" >Loading U-boot</CMD>
	<CMD state="BootStrap" type="load" file="firmware/uImage-mfg" address="0x10800000"
        loadSection="OTH" setSection="OTH" HasFlashHeader="FALSE" >Loading Kernel.</CMD>
    <CMD state="BootStrap" type="load" file="firmware/initramfs.cpio.gz.uboot" address="0x10C00000"
        loadSection="OTH" setSection="OTH" HasFlashHeader="FALSE" >Loading Initramfs.</CMD>
    <CMD state="BootStrap" type="jump" > Jumping to OS image. </CMD>

    <!-- set /iMX_STBYEN to High -->
	<CMD state="Updater" type="push" body="$ echo 168 > /sys/class/gpio/export">export GPIO</CMD>
	<CMD state="Updater" type="push" body="$ echo out > /sys/class/gpio/gpio168/direction">set GPIO direction</CMD>
	<CMD state="Updater" type="push" body="$ echo 1 > /sys/class/gpio/gpio168/value">set GPIO value</CMD>

	<CMD state="Updater" type="push" body="send" file="mksdcard-android.sh.tar">Sending partition shell</CMD>
	<CMD state="Updater" type="push" body="$ tar xf $FILE "> Partitioning...</CMD>
	<CMD state="Updater" type="push" body="$ sh mksdcard-android.sh /dev/mmcblk0"> Partitioning...</CMD>

	<CMD state="Updater" type="push" body="$ ls -l /dev/mmc* ">Formatting sd partition</CMD>
	<CMD state="Updater" type="push" body="frf">flush the memory.</CMD>

	<CMD state="Updater" type="push" body="send" file="files/boot.img">Sending kernel uImage</CMD>
	<CMD state="Updater" type="push" body="$ dd if=$FILE of=/dev/mmcblk0p1">write boot.img</CMD>
	
	<CMD state="Updater" type="push" body="frf">Finishing rootfs write</CMD>
	<CMD state="Updater" type="push" body="$ echo Update Complete!">Done</CMD>
	
  </LIST>
  
  <LIST name="TCU-System" desc="Update Android System in eMMC">
	
	<CMD state="BootStrap" type="boot" body="BootStrap" file ="firmware/u-boot-mfg.bin" >Loading U-boot</CMD>
	<CMD state="BootStrap" type="load" file="firmware/uImage-mfg" address="0x10800000"
        loadSection="OTH" setSection="OTH" HasFlashHeader="FALSE" >Loading Kernel.</CMD>
    <CMD state="BootStrap" type="load" file="firmware/initramfs.cpio.gz.uboot" address="0x10C00000"
        loadSection="OTH" setSection="OTH" HasFlashHeader="FALSE" >Loading Initramfs.</CMD>
    <CMD state="BootStrap" type="jump" > Jumping to OS image. </CMD>
    
    <!-- set /iMX_STBYEN to High -->
	<CMD state="Updater" type="push" body="$ echo 168 > /sys/class/gpio/export">export GPIO</CMD>
	<CMD state="Updater" type="push" body="$ echo out > /sys/class/gpio/gpio168/direction">set GPIO direction</CMD>
	<CMD state="Updater" type="push" body="$ echo 1 > /sys/class/gpio/gpio168/value">set GPIO value</CMD>
    
	<CMD state="Updater" type="push" body="send" file="mksdcard-android.sh.tar">Sending partition shell</CMD>
	<CMD state="Updater" type="push" body="$ tar xf $FILE "> Partitioning...</CMD>
	<CMD state="Updater" type="push" body="$ sh mksdcard-android.sh /dev/mmcblk0"> Partitioning...</CMD>

	<CMD state="Updater" type="push" body="$ ls -l /dev/mmc* ">Formatting sd partition</CMD>
	<CMD state="Updater" type="push" body="frf">flush the memory.</CMD>

	<!-- Do not format data partition for keep NAVI Mapdata
	<CMD state="Updater" type="push" body="$ mkfs.ext4 -b 4096 -m 0 /dev/mmcblk0p4">Formatting data partition</CMD>
    -->

	<CMD state="Updater" type="push" body="$ mkfs.ext4 /dev/mmcblk0p5">Formatting system partition</CMD>
	<CMD state="Updater" type="push" body="$ mkfs.ext4 /dev/mmcblk0p6">Formatting cache partition</CMD>
	<CMD state="Updater" type="push" body="$ mkfs.ext4 /dev/mmcblk0p7">Formatting device partition</CMD>
	<CMD state="Updater" type="push" body="pipe dd of=/dev/mmcblk0p5 bs=512k" file="files/system.img">Sending and writting system.img</CMD>
	<CMD state="Updater" type="push" body="frf">flush the memory.</CMD>

	<CMD state="Updater" type="push" body="$ echo 8 > /sys/devices/platform/sdhci-esdhc-imx.1/mmc_host/mmc0/mmc0:0001/boot_config">enable boot partion 1 to boot</CMD>
	<CMD state="Updater" type="push" body="frf">Finishing rootfs write</CMD>
	<CMD state="Updater" type="push" body="$ echo Update Complete!">Done</CMD>
	
  </LIST>
  
  <LIST name="TCU-Recovery" desc="Update Recovery Kernel in eMMC">
	
	<CMD state="BootStrap" type="boot" body="BootStrap" file ="firmware/u-boot-mfg.bin" >Loading U-boot</CMD>
	<CMD state="BootStrap" type="load" file="firmware/uImage-mfg" address="0x10800000"
        loadSection="OTH" setSection="OTH" HasFlashHeader="FALSE" >Loading Kernel.</CMD>
    <CMD state="BootStrap" type="load" file="firmware/initramfs.cpio.gz.uboot" address="0x10C00000"
        loadSection="OTH" setSection="OTH" HasFlashHeader="FALSE" >Loading Initramfs.</CMD>
    <CMD state="BootStrap" type="jump" > Jumping to OS image. </CMD>
    
    <!-- set /iMX_STBYEN to High -->
	<CMD state="Updater" type="push" body="$ echo 168 > /sys/class/gpio/export">export GPIO</CMD>
	<CMD state="Updater" type="push" body="$ echo out > /sys/class/gpio/gpio168/direction">set GPIO direction</CMD>
	<CMD state="Updater" type="push" body="$ echo 1 > /sys/class/gpio/gpio168/value">set GPIO value</CMD>

	<CMD state="Updater" type="push" body="send" file="mksdcard-android.sh.tar">Sending partition shell</CMD>
	<CMD state="Updater" type="push" body="$ tar xf $FILE "> Partitioning...</CMD>
	<CMD state="Updater" type="push" body="$ sh mksdcard-android.sh /dev/mmcblk0"> Partitioning...</CMD>

	<CMD state="Updater" type="push" body="$ ls -l /dev/mmc* ">Formatting sd partition</CMD>
	<CMD state="Updater" type="push" body="frf">flush the memory.</CMD>

    <CMD state="Updater" type="push" body="pipe dd of=/dev/mmcblk0p2 bs=512" file="files/recovery.img">Sending and writting recovery.img</CMD>

	<CMD state="Updater" type="push" body="$ echo 8 > /sys/devices/platform/sdhci-esdhc-imx.1/mmc_host/mmc0/mmc0:0001/boot_config">enable boot partion 1 to boot</CMD>
	<CMD state="Updater" type="push" body="frf">Finishing rootfs write</CMD>
	<CMD state="Updater" type="push" body="$ echo Update Complete!">Done</CMD>
	
  </LIST>
  
  <LIST name="TCU-All&NaviMapData" desc="Update All in eMMC & NaviMapData">
	
	<CMD state="BootStrap" type="boot" body="BootStrap" file ="firmware/u-boot-mfg.bin" >Loading U-boot</CMD>
	<CMD state="BootStrap" type="load" file="firmware/uImage-mfg" address="0x10800000"
        loadSection="OTH" setSection="OTH" HasFlashHeader="FALSE" >Loading Kernel.</CMD>
    <CMD state="BootStrap" type="load" file="firmware/initramfs.cpio.gz.uboot" address="0x10C00000"
        loadSection="OTH" setSection="OTH" HasFlashHeader="FALSE" >Loading Initramfs.</CMD>
    <CMD state="BootStrap" type="jump" > Jumping to OS image. </CMD>
    
    <!-- set /iMX_STBYEN to High -->
	<CMD state="Updater" type="push" body="$ echo 168 > /sys/class/gpio/export">export GPIO</CMD>
	<CMD state="Updater" type="push" body="$ echo out > /sys/class/gpio/gpio168/direction">set GPIO direction</CMD>
	<CMD state="Updater" type="push" body="$ echo 1 > /sys/class/gpio/gpio168/value">set GPIO value</CMD>
    
	<CMD state="Updater" type="push" body="$ dd if=/dev/zero of=/dev/mmcblk0 bs=512 seek=1536 count=16">clean up u-boot parameter</CMD>
	
	<CMD state="Updater" type="push" body="$ echo 0 > /sys/block/mmcblk0boot0/force_ro">access boot partition 1</CMD>
	<CMD state="Updater" type="push" body="send" file="files/u-boot.bin">Sending U-Boot</CMD>
	<CMD state="Updater" type="push" body="$ dd if=$FILE of=/dev/mmcblk0boot0 bs=512 seek=2 skip=2">write U-Boot to sd card</CMD>
	<CMD state="Updater" type="push" body="$ echo 1 > /sys/block/mmcblk0boot0/force_ro"> re-enable read-only access</CMD>
		
	<CMD state="Updater" type="push" body="send" file="mksdcard-android.sh.tar">Sending partition shell</CMD>
	<CMD state="Updater" type="push" body="$ tar xf $FILE "> Partitioning...</CMD>
	<CMD state="Updater" type="push" body="$ sh mksdcard-android.sh /dev/mmcblk0"> Partitioning...</CMD>

	<CMD state="Updater" type="push" body="$ ls -l /dev/mmc* ">Formatting sd partition</CMD>

	<CMD state="Updater" type="push" body="send" file="files/boot.img">Sending kernel uImage</CMD>
	<CMD state="Updater" type="push" body="$ dd if=$FILE of=/dev/mmcblk0p1">write boot.img</CMD>

	<CMD state="Updater" type="push" body="$ mkfs.ext4 -b 4096 -m 0 /dev/mmcblk0p4">Formatting data partition</CMD>

	<CMD state="Updater" type="push" body="$ mkfs.ext4 /dev/mmcblk0p5">Formatting system partition</CMD>
	<CMD state="Updater" type="push" body="$ mkfs.ext4 /dev/mmcblk0p6">Formatting cache partition</CMD>
	<CMD state="Updater" type="push" body="$ mkfs.ext4 /dev/mmcblk0p7">Formatting device partition</CMD>
	<CMD state="Updater" type="push" body="pipe dd of=/dev/mmcblk0p5 bs=512k" file="files/system.img">Sending and writting system.img</CMD>
	<CMD state="Updater" type="push" body="frf">flush the memory.</CMD>

	<CMD state="Updater" type="push" body="pipe dd of=/dev/mmcblk0p2 bs=512" file="files/recovery.img">Sending and writting recovery.img</CMD>
	
	<!-- Send NAVI MapData >>> -->
    <CMD state="Updater" type="push" body="$ mkdir -p /mnt/mmcblk0p4"/>
    <CMD state="Updater" type="push" body="$ mount -t ext4 /dev/mmcblk0p4 /mnt/mmcblk0p4"/>
    <CMD state="Updater" type="push" body="$ echo 3 > /proc/sys/vm/drop_caches">release memory</CMD>

    <!-- Send mapdata1 Package -->
    <CMD state="Updater" type="push" body="pipe tar -xvp -C /mnt/mmcblk0p4" file="mapdata/mapdata1.tar">Unpacking NAVI MapData Pack1</CMD>
    <CMD state="Updater" type="push" body="frf">Finishing NAVI MapData Pack1 write</CMD>
    <CMD state="Updater" type="push" body="$ echo 3 > /proc/sys/vm/drop_caches">release memory</CMD>
    <!-- Send mapdata2 Package -->
    <CMD state="Updater" type="push" body="pipe tar -xvp -C /mnt/mmcblk0p4" file="mapdata/mapdata2.tar">Unpacking NAVI MapData Pack2</CMD>
    <CMD state="Updater" type="push" body="frf">Finishing NAVI MapData Pack2 write</CMD>
    <CMD state="Updater" type="push" body="$ echo 3 > /proc/sys/vm/drop_caches">release memory</CMD>
    <!-- Send mapdata3 Package -->
    <CMD state="Updater" type="push" body="pipe tar -xvp -C /mnt/mmcblk0p4" file="mapdata/mapdata3.tar">Unpacking NAVI MapData Pack3</CMD>
    <CMD state="Updater" type="push" body="frf">Finishing NAVI MapData Pack3 write</CMD>
    <CMD state="Updater" type="push" body="$ echo 3 > /proc/sys/vm/drop_caches">release memory</CMD>
    <!-- Send mapdata4 Package -->
    <CMD state="Updater" type="push" body="pipe tar -xvp -C /mnt/mmcblk0p4" file="mapdata/mapdata4.tar">Unpacking NAVI MapData Pack4</CMD>
    <CMD state="Updater" type="push" body="frf">Finishing NAVI MapData Pack4 write</CMD>
    <CMD state="Updater" type="push" body="$ echo 3 > /proc/sys/vm/drop_caches">release memory</CMD>
    <!-- Send mapdata5 Package -->
    <CMD state="Updater" type="push" body="pipe tar -xvp -C /mnt/mmcblk0p4" file="mapdata/mapdata5.tar">Unpacking NAVI MapData Pack5</CMD>
    <CMD state="Updater" type="push" body="frf">Finishing NAVI MapData Pack5 write</CMD>
    <CMD state="Updater" type="push" body="$ echo 3 > /proc/sys/vm/drop_caches">release memory</CMD>
    <!-- Send mapdata6 Package -->
    <CMD state="Updater" type="push" body="pipe tar -xvp -C /mnt/mmcblk0p4" file="mapdata/mapdata6.tar">Unpacking NAVI MapData Pack6</CMD>
    <CMD state="Updater" type="push" body="frf">Finishing NAVI MapData Pack6 write</CMD>
    <CMD state="Updater" type="push" body="$ echo 3 > /proc/sys/vm/drop_caches">release memory</CMD>

    <CMD state="Updater" type="push" body="$ umount /mnt/mmcblk0p4">Unmounting data partition</CMD>
    <!-- Send NAVI MapData <<< -->
    
	<CMD state="Updater" type="push" body="$ echo 8 > /sys/devices/platform/sdhci-esdhc-imx.1/mmc_host/mmc0/mmc0:0001/boot_config">enable boot partion 1 to boot</CMD>
	<CMD state="Updater" type="push" body="frf">Finishing rootfs write</CMD>
	<CMD state="Updater" type="push" body="$ echo Update Complete!">Done</CMD>
	
  </LIST>
  
  <LIST name="TCU-NaviMapData" desc="Only Update NaviMapData in eMMC">
	
	<CMD state="BootStrap" type="boot" body="BootStrap" file ="firmware/u-boot-mfg.bin" >Loading U-boot</CMD>
	<CMD state="BootStrap" type="load" file="firmware/uImage-mfg" address="0x10800000"
        loadSection="OTH" setSection="OTH" HasFlashHeader="FALSE" >Loading Kernel.</CMD>
    <CMD state="BootStrap" type="load" file="firmware/initramfs.cpio.gz.uboot" address="0x10C00000"
        loadSection="OTH" setSection="OTH" HasFlashHeader="FALSE" >Loading Initramfs.</CMD>
    <CMD state="BootStrap" type="jump" > Jumping to OS image. </CMD>

    <!-- set /iMX_STBYEN to High -->
	<CMD state="Updater" type="push" body="$ echo 168 > /sys/class/gpio/export">export GPIO</CMD>
	<CMD state="Updater" type="push" body="$ echo out > /sys/class/gpio/gpio168/direction">set GPIO direction</CMD>
	<CMD state="Updater" type="push" body="$ echo 1 > /sys/class/gpio/gpio168/value">set GPIO value</CMD>

	<CMD state="Updater" type="push" body="send" file="mksdcard-android.sh.tar">Sending partition shell</CMD>
	<CMD state="Updater" type="push" body="$ tar xf $FILE "> Partitioning...</CMD>
	<CMD state="Updater" type="push" body="$ sh mksdcard-android.sh /dev/mmcblk0"> Partitioning...</CMD>

	<CMD state="Updater" type="push" body="$ ls -l /dev/mmc* ">Formatting sd partition</CMD>
	<CMD state="Updater" type="push" body="frf">flush the memory.</CMD>

	<!-- Format Data Partition -->
	<CMD state="Updater" type="push" body="$ mkfs.ext4 -b 4096 -m 0 /dev/mmcblk0p4">Formatting data partition</CMD>

	<!-- Send NAVI MapData >>> -->
    <CMD state="Updater" type="push" body="$ mkdir -p /mnt/mmcblk0p4"/>
    <CMD state="Updater" type="push" body="$ mount -t ext4 /dev/mmcblk0p4 /mnt/mmcblk0p4"/>
    <CMD state="Updater" type="push" body="$ echo 3 > /proc/sys/vm/drop_caches">release memory</CMD>

    <!-- Send mapdata1 Package -->
    <CMD state="Updater" type="push" body="pipe tar -xvp -C /mnt/mmcblk0p4" file="mapdata/mapdata1.tar">Unpacking NAVI MapData Pack1</CMD>
    <CMD state="Updater" type="push" body="frf">Finishing NAVI MapData Pack1 write</CMD>
    <CMD state="Updater" type="push" body="$ echo 3 > /proc/sys/vm/drop_caches">release memory</CMD>
    <!-- Send mapdata2 Package -->
    <CMD state="Updater" type="push" body="pipe tar -xvp -C /mnt/mmcblk0p4" file="mapdata/mapdata2.tar">Unpacking NAVI MapData Pack2</CMD>
    <CMD state="Updater" type="push" body="frf">Finishing NAVI MapData Pack2 write</CMD>
    <CMD state="Updater" type="push" body="$ echo 3 > /proc/sys/vm/drop_caches">release memory</CMD>
    <!-- Send mapdata3 Package -->
    <CMD state="Updater" type="push" body="pipe tar -xvp -C /mnt/mmcblk0p4" file="mapdata/mapdata3.tar">Unpacking NAVI MapData Pack3</CMD>
    <CMD state="Updater" type="push" body="frf">Finishing NAVI MapData Pack3 write</CMD>
    <CMD state="Updater" type="push" body="$ echo 3 > /proc/sys/vm/drop_caches">release memory</CMD>
    <!-- Send mapdata4 Package -->
    <CMD state="Updater" type="push" body="pipe tar -xvp -C /mnt/mmcblk0p4" file="mapdata/mapdata4.tar">Unpacking NAVI MapData Pack4</CMD>
    <CMD state="Updater" type="push" body="frf">Finishing NAVI MapData Pack4 write</CMD>
    <CMD state="Updater" type="push" body="$ echo 3 > /proc/sys/vm/drop_caches">release memory</CMD>
    <!-- Send mapdata5 Package -->
    <CMD state="Updater" type="push" body="pipe tar -xvp -C /mnt/mmcblk0p4" file="mapdata/mapdata5.tar">Unpacking NAVI MapData Pack5</CMD>
    <CMD state="Updater" type="push" body="frf">Finishing NAVI MapData Pack5 write</CMD>
    <CMD state="Updater" type="push" body="$ echo 3 > /proc/sys/vm/drop_caches">release memory</CMD>
    <!-- Send mapdata6 Package -->
    <CMD state="Updater" type="push" body="pipe tar -xvp -C /mnt/mmcblk0p4" file="mapdata/mapdata6.tar">Unpacking NAVI MapData Pack6</CMD>
    <CMD state="Updater" type="push" body="frf">Finishing NAVI MapData Pack6 write</CMD>
    <CMD state="Updater" type="push" body="$ echo 3 > /proc/sys/vm/drop_caches">release memory</CMD>

    <CMD state="Updater" type="push" body="$ umount /mnt/mmcblk0p4">Unmounting data partition</CMD>
    <!-- Send NAVI MapData <<< -->

    <CMD state="Updater" type="push" body="$ echo 8 > /sys/devices/platform/sdhci-esdhc-imx.1/mmc_host/mmc0/mmc0:0001/boot_config">enable boot partion 1 to boot</CMD>
	<CMD state="Updater" type="push" body="frf">Finishing rootfs write</CMD>
	<CMD state="Updater" type="push" body="$ echo Update Complete!">Done</CMD>
	
  </LIST>
  
  <LIST name="TCU-eMMC-Clear" desc="Clear boot0 & data in eMMC to zero">
	
	<CMD state="BootStrap" type="boot" body="BootStrap" file ="firmware/u-boot-mfg.bin" >Loading U-boot</CMD>
	<CMD state="BootStrap" type="load" file="firmware/uImage-mfg" address="0x10800000"
        loadSection="OTH" setSection="OTH" HasFlashHeader="FALSE" >Loading Kernel.</CMD>
    <CMD state="BootStrap" type="load" file="firmware/initramfs.cpio.gz.uboot" address="0x10C00000"
        loadSection="OTH" setSection="OTH" HasFlashHeader="FALSE" >Loading Initramfs.</CMD>
    <CMD state="BootStrap" type="jump" > Jumping to OS image. </CMD>

    <!-- set /iMX_STBYEN to High -->
	<CMD state="Updater" type="push" body="$ echo 168 > /sys/class/gpio/export">export GPIO</CMD>
	<CMD state="Updater" type="push" body="$ echo out > /sys/class/gpio/gpio168/direction">set GPIO direction</CMD>
	<CMD state="Updater" type="push" body="$ echo 1 > /sys/class/gpio/gpio168/value">set GPIO value</CMD>
	
	<CMD state="Updater" type="push" body="send" file="clrmmc.sh.tar">Sending script</CMD>
	<CMD state="Updater" type="push" body="$ tar xf $FILE "/>
	<CMD state="Updater" type="push" body="$ sh clrmmc.sh">Clearing eMMC</CMD>

	<CMD state="Updater" type="push" body="$ echo eMMC Clear Complete!">Done</CMD>
	
  </LIST>
  
  <LIST name="TCU-eMMC-Read" desc="Read boot0 & data from eMMC">
	
    <CMD state="BootStrap" type="boot" body="BootStrap" file ="firmware/u-boot-mfg.bin" >Loading U-boot</CMD>
	<CMD state="BootStrap" type="load" file="firmware/uImage-mfg" address="0x10800000"
        loadSection="OTH" setSection="OTH" HasFlashHeader="FALSE" >Loading Kernel.</CMD>
    <CMD state="BootStrap" type="load" file="firmware/initramfs.cpio.gz.uboot" address="0x10C00000"
        loadSection="OTH" setSection="OTH" HasFlashHeader="FALSE" >Loading Initramfs.</CMD>
    <CMD state="BootStrap" type="jump" > Jumping to OS image. </CMD>

    <!-- set /iMX_STBYEN to High -->
	<CMD state="Updater" type="push" body="$ echo 168 > /sys/class/gpio/export">export GPIO</CMD>
	<CMD state="Updater" type="push" body="$ echo out > /sys/class/gpio/gpio168/direction">set GPIO direction</CMD>
	<CMD state="Updater" type="push" body="$ echo 1 > /sys/class/gpio/gpio168/value">set GPIO value</CMD>
	
	<CMD state="Updater" type="push" body="$ ifconfig eth0 up">Setting Network</CMD>
    <CMD state="Updater" type="push" body="$ sleep %ifconfig_waittime%"/>
    <CMD state="Updater" type="push" body="$ ifconfig eth0 %board_ip% netmask %netmask%"/>

    <CMD state="Updater" type="push" body="$ mkdir -p /mnt/nfs"/>    
    <CMD state="Updater" type="push" body="$ busybox mount -o nolock -t nfs %server_ip%:%nfsdir% /mnt/nfs"/>

    <CMD state="Updater" type="push" body="$ dd if=/dev/mmcblk0boot0 of=/mnt/nfs/%boot0_bin%">Reading eMMC Boot0</CMD>

    <CMD state="Updater" type="push" body="$ dd if=/dev/mmcblk0 of=/mnt/nfs/%emmc_bin% bs=1M">Reading eMMC Data</CMD>

    <CMD state="Updater" type="push" body="$ busybox umount /mnt/nfs"/>

	<CMD state="Updater" type="push" body="$ echo eMMC Read Complete!">Done</CMD>
	
  </LIST>
  
  <LIST name="TCU-eMMC-Write" desc="Write boot0 & data to eMMC">
	
    <CMD state="BootStrap" type="boot" body="BootStrap" file ="firmware/u-boot-mfg.bin" >Loading U-boot</CMD>
	<CMD state="BootStrap" type="load" file="firmware/uImage-mfg" address="0x10800000"
        loadSection="OTH" setSection="OTH" HasFlashHeader="FALSE" >Loading Kernel.</CMD>
    <CMD state="BootStrap" type="load" file="firmware/initramfs.cpio.gz.uboot" address="0x10C00000"
        loadSection="OTH" setSection="OTH" HasFlashHeader="FALSE" >Loading Initramfs.</CMD>
    <CMD state="BootStrap" type="jump" > Jumping to OS image. </CMD>

    <!-- set /iMX_STBYEN to High -->
	<CMD state="Updater" type="push" body="$ echo 168 > /sys/class/gpio/export">export GPIO</CMD>
	<CMD state="Updater" type="push" body="$ echo out > /sys/class/gpio/gpio168/direction">set GPIO direction</CMD>
	<CMD state="Updater" type="push" body="$ echo 1 > /sys/class/gpio/gpio168/value">set GPIO value</CMD>
	
	<CMD state="Updater" type="push" body="$ ifconfig eth0 up">Setting Network</CMD>
    <CMD state="Updater" type="push" body="$ sleep %ifconfig_waittime%"/>
    <CMD state="Updater" type="push" body="$ ifconfig eth0 %board_ip% netmask %netmask%"/>

    <CMD state="Updater" type="push" body="$ mkdir -p /mnt/nfs"/>    
    <CMD state="Updater" type="push" body="$ busybox mount -o nolock -t nfs %server_ip%:%nfsdir% /mnt/nfs"/>
    
    <CMD state="Updater" type="push" body="$ echo 0 > /sys/block/mmcblk0boot0/force_ro">access boot partition 1</CMD>
    <CMD state="Updater" type="push" body="$ dd if=/mnt/nfs/%boot0_bin% of=/dev/mmcblk0boot0">Writing eMMC Boot0</CMD>
	<CMD state="Updater" type="push" body="$ echo 1 > /sys/block/mmcblk0boot0/force_ro">re-enable read-only access</CMD>    

    <CMD state="Updater" type="push" body="$ dd if=/mnt/nfs/%emmc_bin% of=/dev/mmcblk0 bs=1M">Writing eMMC Data</CMD>

    <CMD state="Updater" type="push" body="$ busybox umount /mnt/nfs"/>

	<CMD state="Updater" type="push" body="$ echo eMMC Write Complete!">Done</CMD>
	
  </LIST>

</UCL>
